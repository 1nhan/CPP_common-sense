# Drill
자신의 컴퓨터에서 프로그램을 컴파일하고 실행하는 방법을 알아보세요. 이전에 해본 적 있는 사람에게 도움을 받는 것도 좋은 방법입니다.
IDE를 사용하는 경우, hello_world라는 이름의 빈 콘솔 C++ 프로젝트(empty console C++ project)를 설정하세요. 명령줄(command line)을 사용할 계획이라면, 명령창(command window)을 열고, 코드를 입력할 수 있는 편집기(editor)를 사용하는 방법을 익히세요. §0.3.1을 참고하세요.<br>
아래에 명시된 대로 정확히 hello_world.cpp를 입력하고, 연습용 디렉터리(practice directory)에 저장한 후, hello_world 프로젝트에 포함시키세요:

```cpp
import std;
int main() // C++ 프로그램은 main 함수부터 실행됩니다
{
    std::cout << "Hello, World!\n"; // "Hello, World!" 출력
}
```
만약 최신 C++ 구현체가 없어서 module std를 지원하지 않는 경우, C 언어 시절부터 사용되어 온 덜 우아하고 덜 효율적인 방법을 사용하세요. §7.7.2에서 설명한 대로 헤더 파일을 포함(include)하면 됩니다:

```cpp
#include <iostream>
int main() // C++ 프로그램은 main 함수부터 실행됩니다
{
    std::cout << "Hello, World!\n"; // "Hello, World!" 출력
}
```
"Hello, World!" 프로그램을 컴파일하고 실행하세요. IDE에는 컴파일 및 실행 버튼이 있을 것입니다. 아주 단순한 "Hello, World!" 프로그램조차도, 새로운 프로그래밍 언어나 환경을 처음 사용할 때는 거의 항상 오류가 발생합니다. 문제를 찾아내고 수정하세요! 이 시점에서는 경험 있는 사람에게 도움을 요청하는 것이 현명한 선택입니다. 단, 보여주는 내용을 반드시 이해하고, 이후에는 스스로 수행할 수 있도록 하세요.<br>
이제까지 몇 가지 오류를 경험하고 수정했을 것입니다. 지금이 여러분의 컴파일러의 오류 탐지 및 보고 기능(error-detection and error-reporting facilities)에 대해 더 잘 익숙해질 시점입니다. §1.3에서 소개한 8개의 오류 예제 프로그램을 실행해보며, 여러분의 개발 환경이 어떻게 반응하는지 확인해보세요. 또한, 여러분이 프로그램을 입력하면서 실수할 수 있는 오류 다섯 가지 이상을 생각해보세요. 예:<br>
Caps Lock 키를 켜둔 채 단어 입력<br>
세미콜론 대신 쉼표 입력<br>
괄호 누락<br>
잘못된 들여쓰기<br>
예약어 철자 오류 등 각 오류를 실제로 입력해보고, 컴파일 및 실행 시 어떤 일이 발생하는지 확인해보세요.<br>
